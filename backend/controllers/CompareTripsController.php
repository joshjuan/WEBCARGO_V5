<?php

namespace backend\controllers;

ini_set('memory_limit', '5024M');

use backend\models\CompareTrips;
use backend\models\CompareTripsItems;
use backend\models\CompareTripsSearch;
use backend\models\Devices;
use backend\models\SalesTrips;
use backend\models\TraWebComparrison;
use Codeception\Lib\Interfaces\Web;
use Yii;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\UploadedFile;
use PhpOffice\PhpSpreadsheet\IOFactory;

/**
 * CompareTripsController implements the CRUD actions for CompareTrips model.
 */
class CompareTripsController extends Controller
{
    /**
     * @inheritDoc
     */
    public function behaviors()
    {
        return array_merge(
            parent::behaviors(),
            [
                'verbs' => [
                    'class' => VerbFilter::className(),
                    'actions' => [
                        'delete' => ['POST'],
                    ],
                ],
            ]
        );
    }

    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            return $this->redirect(['site/login'])->send();  // login path
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all CompareTrips models.
     *
     * @return string
     */
    public function actionIndex()
    {
        $searchModel = new CompareTripsSearch();
        $dataProvider = $searchModel->search($this->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single CompareTrips model.
     * @param int $id ID
     * @return string
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new CompareTrips model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return string|\yii\web\Response
     */
    public function actionCreate()
    {


        $model = new CompareTrips();
        $model->upload_date = date('Y-m-d H:i:s');
        $model->status = 1;
        $model->total_activation = 0;
        $model->upload_by = \Yii::$app->user->getId();
        if ($this->request->isPost) {
            if ($model->load($this->request->post())) {
                $model->file = UploadedFile::getInstance($model, 'file');
                if ($model->file != '') {
                    $fileName = \Yii::$app->security->generateRandomString(5) . date('Ymdi');

                    $model->file = UploadedFile::getInstance($model, 'file');
                    if ($model->file != '') {
                        $model->file = UploadedFile::getInstance($model, 'file');
                        $model->file->saveAs('../uploads/devices/' . $fileName . '.' . $model->file->extension);
                        $model->document_name = $fileName . '.' . $model->file->extension;
                        $model->document_path = '../uploads/devices/' . $model->document_name;
                        $model->save(false);


                        define('CSV_PATH', '../uploads/devices/' . $model->document_name);
                        $csv_file = CSV_PATH . '';
                        $filecsv = file($csv_file);
                        // $transaction = Yii::$app->db->beginTransaction();

                        $count = 0;
                        foreach ($filecsv as $key => $data) {
                            if ($key != 0) {

                                $count = $key;

                                $modelnew = new CompareTripsItems();
                                $fileop = explode(",", $data);
                                $TRIP_NUMBER = $fileop[0];
                                $TRIP_NUMBER = str_replace("TZDL", "", $TRIP_NUMBER);
                                $SERIAL_NUMBER = $fileop[1];
                                $VEHICLE_NUMBER = $fileop[2];
                                $ACTIVATION_DATE = $fileop[3];
                                $timestamp = strtotime($ACTIVATION_DATE);
                                $ACTIVATION_DATE = date('Y-m-d H:i:s', $timestamp);

                                $DEACTIVATION_DATE = $fileop[4];
                                $timestamp = strtotime($DEACTIVATION_DATE);
                                $DEACTIVATION_DATE = date('Y-m-d H:i:s', $timestamp);

                                $check = CompareTripsItems::find()
                                    ->where(['tzdl' => $TRIP_NUMBER])
                                    ->one();

                                if ($check) {
                                    //    $transaction->rollBack();

                                    Yii::$app->session->setFlash('', [
                                        'type' => 'danger',
                                        'duration' => 5000,
                                        'icon' => 'fa fa-check',
                                        'message' => "TZDL $TRIP_NUMBER exist, the process is rolled back ",
                                        'positonY' => 'top',
                                        'positonX' => 'right',
                                    ]);


                                } else {

                                    $modelnew->route = $model->id;
                                    $modelnew->tzdl = $TRIP_NUMBER;
                                    $modelnew->serial_no = $SERIAL_NUMBER;
                                    $modelnew->vehicle_no = $VEHICLE_NUMBER;
                                    $modelnew->activation_date = $ACTIVATION_DATE;
                                    $modelnew->deactivate_date = $DEACTIVATION_DATE;
                                    $modelnew->status = '1';
                                    $modelnew->save(false);

                                    //   $transaction->commit();

                                }


                            }

                        }


                        CompareTrips::updateAll(['total_activation' => $count], ['id' => $model->id]);

                        Yii::$app->session->setFlash('', [
                            'type' => 'success',
                            'duration' => 5000,
                            'icon' => 'fa fa-check',
                            'message' => "Successfully uploaded",
                            'positonY' => 'top',
                            'positonX' => 'right',
                        ]);


                        return $this->redirect(['index']);

                    }

                } else {
                    //  $model->save();

                }


                return $this->redirect(['view', 'id' => $model->id]);
            }
        } else {
            $model->loadDefaultValues();
        }

        return $this->render('create', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing CompareTrips model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param int $id ID
     * @return string|\yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($this->request->isPost && $model->load($this->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        }

        return $this->render('update', [
            'model' => $model,
        ]);
    }

    public function actionCompare($id)
    {
        $model = $this->findModel($id);
        $trips = CompareTripsItems::find()
            ->where(['route' => $id])
            ->andWhere(['status' => 1])
            ->asArray()
            ->all();
        if ($trips) {

            foreach ($trips as $key => $trip) {
                $tzdl = $trip['tzdl'];
                $serialNo = $trip['serial_no'];

                $branch=Devices::find()
                    ->where(['serial_no' =>$serialNo])
                    ->one();
                if ($branch){
                    $branch_id=$branch->branch;
                }
                else{
                    $branch_id=NULL;
                }

                $sales = SalesTrips::find()
                    ->where(['serial_no' => $serialNo])
                    ->andWhere(['trip_status' => 1])
                    ->andWhere(['between', 'date(sale_date)', $model->date_from, $model->date_to])
                    ->asArray()
                    ->all();
                $stringTZDL = NULL;
                $stringDates = NULL;
                $WebCount = 0;



                if ($sales) {
                    $tzdls = NULL;
                    $dates = NULL;
                    foreach ($sales as $keySale => $sale) {


                        $WebCount = $keySale + 1;
                        $tzdls[] = $sale['tzl'];
                        $dates[] = $sale['sale_date'];
                        $dates[] = $sale['sale_date'];
                    }
                    $stringTZDL = implode(", ", $tzdls);
                    $stringDates = implode(", ", $dates);
                }

                $traCount = CompareTripsItems::find()
                    ->where(['route' => $model->id])
                    ->andWhere(['serial_no' => $serialNo])
                    ->count('serial_no');
                if ($traCount) {
                    $TRACount = $traCount;
                } else {
                    $TRACount = 0;
                }

                if ($TRACount > 0 && $WebCount > 0) {
                    $countStatus = 1;
                } elseif ($TRACount > 0 && $WebCount <= 0) {
                    $countStatus = 2;
                } elseif ($TRACount <= 0 && $WebCount > 0) {
                    $countStatus = 3;
                } else {
                    $countStatus = 4;
                }

                $comparison = new TraWebComparrison();
                $comparison->branch = $branch_id;
                $comparison->serial_no = $serialNo;
                $comparison->tzdl = $stringTZDL;
                $comparison->compared_by = Yii::$app->user->identity->getId();
                $comparison->sale_dates = $stringDates;
                $comparison->tra_count = $TRACount;
                $comparison->web_count = $WebCount;
                $comparison->count_status = $countStatus; //1 =>BOTH ,2 =>TRA ,3=>WEB ,4=>NO COUNT
                $comparison->datetime = date('Y-m-d H:i:s');
                $comparison->status = 1;
                $comparison->route_id = $model->id;
                $comparison->save(false);

            }

        }
        CompareTrips::updateAll(['status' => 0], ['id' => $model->id]);
        CompareTripsItems::updateAll(['status' => 0], ['route' => $model->id]);
        return $this->redirect(['tra-web-comparrison/report', 'id' => $model->id]);
    }

    /**
     * Deletes an existing CompareTrips model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param int $id ID
     * @return \yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        //  $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the CompareTrips model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param int $id ID
     * @return CompareTrips the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = CompareTrips::findOne(['id' => $id])) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
